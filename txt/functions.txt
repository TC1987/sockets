# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    functions.txt                                      :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: tcho <marvin@42.fr>                        +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2019/02/18 07:44:21 by tcho              #+#    #+#              #
#    Updated: 2019/02/18 08:31:08 by tcho             ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

int socket(int domain, int type, int protocol);

Create a new socket.

return - -1 if an error occurs, otherwise the return value is a descriptor referencing the socket.
domain - The protocol family which should be used. PF_INET
type - The semantics of communication. SOCK_STREAM
protocol - The protocol to be used with the socket.

A stream socket must be in a connected state before any data may be sent or received on it.
Once connected, data may be transferred using read() and write() calls.
When a session has been completed, a close() may be performed.

-----------

int open(const char *path, int oflag, ...);

return - File descriptor.
path - Path to file.
oflag - File options such as if it should be created if it doesn't already exist (O_CREAT).
mode_t mode - Set permissions.

-----------

int setsockopt(int socket, int level, int option_name, const void *option_value, socklen_t option_len);

Change the options associated with a socket. 

-----------

int getsockname(int socket, struct sockaddr *address, socklen_t address_len);

return - 0 if successful, otherwise -1 and errno set.

`address` will point to the address of the socket and `address_len` indicates the length of the address.
